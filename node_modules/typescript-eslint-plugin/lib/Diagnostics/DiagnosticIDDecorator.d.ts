/**
 * Provides the functionality to decorate fix-ids.
 */
export declare class DiagnosticIDDecorator {
    /**
     * A character for separating decorators.
     */
    private separator;
    /**
     * A set of characters for indicating a combined fix.
     */
    private combinedFixDecorator;
    /**
     * A set of characters for indicating a disable fix.
     */
    private disableFixDecorator;
    /**
     * Gets the decorator.
     */
    get Decorator(): string;
    /**
     * Initializes a new instance of the `FixIDDecorator` class.
     */
    constructor();
    /**
     * Decorates a fix-id.
     *
     * @param fixId
     * The fix-id to decorate.
     *
     * @returns
     * The decorated fix.
     */
    DecorateFix(fixId: string): string;
    /**
     * Decorates a fix-id.
     *
     * @param fixId
     * The fix-id to decorate.
     *
     * @returns
     * The decorated fix.
     */
    DecorateCombinedFix(fixId: string): string;
    /**
     * Decorates a fix-id.
     *
     * @param fixId
     * The fix-id to decorate.
     *
     * @returns
     * The decorated fix.
     */
    DecorateDisableFix(fixId: string): string;
    /**
     * Removes the decoration from a fix-id.
     *
     * @param fixId
     * The fix-id to remove the decoration from.
     *
     * @returns
     * The fix-id with its decoration removed.
     */
    UndecorateFix(fixId: string): string;
    /**
     * Removes the decoration from a fix-id.
     *
     * @param fixId
     * The fix-id to remove the decoration from.
     *
     * @returns
     * The fix-id with its decoration removed.
     */
    UndecorateCombinedFix(fixId: string): string;
    /**
     * Removes the decoration from a fix-id.
     *
     * @param fixId
     * The fix-id to remove the decoration from.
     *
     * @returns
     * The fix-id with its decoration removed.
     */
    UndecorateDisableFix(fixId: string): string;
}
