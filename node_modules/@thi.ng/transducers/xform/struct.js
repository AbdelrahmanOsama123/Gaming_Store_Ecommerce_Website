import { isIterable } from "@thi.ng/checks";
import { comp } from "../func/comp";
import { iterator } from "../iterator";
import { mapKeys } from "./map-keys";
import { partition } from "./partition";
import { partitionOf } from "./partition-of";
import { rename } from "./rename";
export function struct(fields, src) {
    return isIterable(src)
        ? iterator(struct(fields), src)
        : comp(partitionOf(fields.map((f) => f[1])), partition(fields.length), rename(fields.map((f) => f[0])), mapKeys(fields.reduce((acc, f) => (f[2] ? ((acc[f[0]] = f[2]), acc) : acc), {}), false));
}
