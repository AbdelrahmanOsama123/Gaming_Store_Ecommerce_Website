import { isIterable } from "@thi.ng/checks";
import { compR } from "../func/compr";
import { iterator } from "../iterator";
import { ensureReduced, reduced } from "../reduced";
export function take(n, src) {
    return isIterable(src)
        ? iterator(take(n), src)
        : (rfn) => {
            const r = rfn[2];
            let m = n;
            return compR(rfn, (acc, x) => --m > 0
                ? r(acc, x)
                : m === 0
                    ? ensureReduced(r(acc, x))
                    : reduced(acc));
        };
}
